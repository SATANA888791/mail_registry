import os, uuid
from datetime import datetime
from flask import current_app
from werkzeug.utils import secure_filename
from app import db
from app.models import LetterOutgoing, LetterIncoming, Attachment
import unicodedata
import re
from sqlalchemy.sql import text


def generate_outgoing_number():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –Ω–æ–º–µ—Ä –≤–∏–¥–∞ H-{seq}/{YY}."""
    year = datetime.datetime.now().year % 100
    seq = (db.session.query(db.func.max(LetterOutgoing.id)).scalar() or 0) + 1
    return f'H-{seq}/{year}'


def generate_incoming_number():
    now = datetime.utcnow()
    current_year = now.year % 100
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –Ω–æ–º–µ—Ä
    next_num = db.session.execute(
        text("SELECT nextval('incoming_number_seq')")
    ).scalar()
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä (–≤ –±–∞–∑–µ - –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–π)
    db_number = f"–í–•-{next_num}/{current_year}"
    
    # –î–ª—è —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã - –ª–∞—Ç–∏–Ω—Å–∫–∏–π –≤–∞—Ä–∏–∞–Ω—Ç
    fs_number = f"VH-{next_num}/{current_year}"
    
    return db_number, fs_number


def save_attachment(file, letter, letter_type):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ñ–∞–π–ª –≤–ª–æ–∂–µ–Ω–∏—è —Å —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–µ–π –∏–º–µ–Ω–∏ –≤:
    uploads/{type}/{user}/{YYYY}/{MM}/{PREFIX}_{id}_{YY}/
    """
    original_filename = file.filename
    safe_name = secure_filename(transliterate(original_filename))  # —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∏—Ä—É–µ–º

     # üÜé –£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å—É—Ñ—Ñ–∏–∫—Å
    unique_suffix = uuid.uuid4().hex[:8]
    name, ext = os.path.splitext(safe_name)
    safe_name = f"{name}_{unique_suffix}{ext}"

    now = datetime.datetime.now()
    prefix = 'H' if letter_type == 'outgoing' else 'VH'
    subdir = f"{prefix}_{letter.id}_{now.year % 100}"

    folder = os.path.join(
        current_app.config['UPLOAD_FOLDER'],
        letter_type,
        letter.user.username,
        str(now.year),
        f"{now.month:02d}",
        subdir
    )
    os.makedirs(folder, exist_ok=True)

    path = os.path.join(folder, safe_name)
    file.save(path)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å –≤ –ë–î
    attach = Attachment(
        letter_id=letter.id,
        letter_type=letter_type,
        filename=original_filename,     # —Ç–æ, —á—Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        stored_filename=safe_name,      # –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–º—è –Ω–∞ –¥–∏—Å–∫–µ
        filepath=path,
        uploaded_at=datetime.datetime.utcnow()
    )
    db.session.add(attach)
    db.session.commit()

    return original_filename, path


def transliterate(text):
    translit_map = {
        '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e',
        '—ë': 'yo', '–∂': 'zh', '–∑': 'z', '–∏': 'i', '–π': 'y', '–∫': 'k',
        '–ª': 'l', '–º': 'm', '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r',
        '—Å': 's', '—Ç': 't', '—É': 'u', '—Ñ': 'f', '—Ö': 'h', '—Ü': 'ts',
        '—á': 'ch', '—à': 'sh', '—â': 'sch', '—ä': '', '—ã': 'y', '—å': '',
        '—ç': 'e', '—é': 'yu', '—è': 'ya'
    }
    result = []
    for char in text.lower():
        result.append(translit_map.get(char, char))
    return ''.join(result)

def allowed_file(filename):
    return '.' in filename and \
           filename.rsplit('.', 1)[1].lower() in current_app.config['ALLOWED_EXTENSIONS']